declare type LoginCallback = (isLoggedIn: boolean) => void;
export declare function onLoginLogout(loginCallback: LoginCallback): void;
/** Create a new session for the user */
export declare function login(rawEmail: string, rawPassphrase: string): Promise<void>;
export declare function changePasswordWithToken(rawNewPassphrase: any, confirmationCode: any): Promise<any>;
export declare function sendPasswordChangeCode(): Promise<any>;
export declare function getPublicKey(): any;
export declare function getPrivateKey(): any;
export declare function getCurrentSessionId(): string | null;
export declare function getAccountId(): any;
export declare function getEmail(): any;
export declare function getFirstName(): any;
export declare function getLastName(): any;
export declare function getFullName(): string;
/** Check if we (think) we have a session */
export declare function isLoggedIn(): boolean;
/** Log out and delete session data */
export declare function logout(): Promise<void>;
/** Set data for the new session and store it encrypted with the sessionId */
export declare function setSessionData(sessionId: any, accountId: any, firstName: any, lastName: any, email: any, symmetricKey: any, publicKey: any, encPrivateKey: any): void;
export declare function listTeams(): Promise<any>;
export declare function endTrial(): Promise<void>;
export {};
//# sourceMappingURL=session.d.ts.map