import type { BaseModel } from '../models/index';
import { ImportToWorkspacePrompt, SetWorkspaceScopePrompt } from '../ui/redux/modules/helpers';
export interface ImportResult {
    source: string;
    error: Error | null;
    summary: Record<string, BaseModel[]>;
}
interface ConvertResultType {
    id: string;
    name: string;
    description: string;
}
export interface ImportRawConfig {
    getWorkspaceId: ImportToWorkspacePrompt;
    getProjectId?: () => Promise<string>;
    getWorkspaceScope?: SetWorkspaceScopePrompt;
    enableDiffBasedPatching?: boolean;
    enableDiffDeep?: boolean;
    bypassDiffProps?: {
        url: boolean;
    };
}
export declare function importUri(uri: string, importConfig: ImportRawConfig): Promise<ImportResult>;
export declare function importRaw(rawContent: string, { getWorkspaceId, getWorkspaceScope, getProjectId, enableDiffBasedPatching, enableDiffDeep, bypassDiffProps, }: ImportRawConfig): Promise<ImportResult>;
export declare const isApiSpecImport: ({ id }: Pick<ConvertResultType, 'id'>) => boolean;
export declare const isInsomniaV4Import: ({ id }: Pick<ConvertResultType, 'id'>) => boolean;
export {};
//# sourceMappingURL=import.d.ts.map