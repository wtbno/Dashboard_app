import { HotKeyRegistry, KeyBindings, KeyCombination } from 'insomnia-common';
/**
 * The readable definition of a hotkey.
 * The {@code id} the hotkey's reference id.
 */
export interface HotKeyDefinition {
    id: string;
    description: string;
}
/**
 * The collection of available hotkeys' and their definitions.
 */
export declare const hotKeyRefs: Record<string, HotKeyDefinition>;
/**
 * Get a new copy of key bindings with default key combinations.
 * @param hotKeyRefId
 * @returns {KeyBindings}
 */
export declare function newDefaultKeyBindings(hotKeyRefId: string): KeyBindings;
/**
 * Get a new copy of hotkey registry with default values.
 * @returns {HotKeyRegistry}
 */
export declare function newDefaultRegistry(): HotKeyRegistry;
/**
 * Get the key combinations based on the current platform.
 * @param bindings
 * @returns {Array<KeyCombination>}
 */
export declare function getPlatformKeyCombinations(bindings: KeyBindings): KeyCombination[];
/**
 * Determine whether two key combinations are the same by comparing each of their keys.
 * @param keyComb1
 * @param keyComb2
 * @returns {boolean}
 */
export declare function areSameKeyCombinations(keyComb1: KeyCombination, keyComb2: KeyCombination): boolean;
/**
 * Checks whether the given key bindings is the same as the default one,
 * identified with hot key reference id.
 * @param hotKeyRefId refers to the default key bindings to check.
 * @param keyBinds to check with the default ones.
 * @returns {boolean}
 */
export declare function areKeyBindingsSameAsDefault(hotKeyRefId: string, keyBinds: KeyBindings): boolean;
/**
 * Gets the displayed text of a key code.
 * @param keyCode
 * @returns {string}
 */
export declare function getChar(keyCode: number): any;
/**
 * Check whether key code is a modifier key, i.e., alt, shift, ctrl, or meta.
 * @param keyCode
 * @returns {boolean}
 */
export declare function isModifierKeyCode(keyCode: number): boolean;
/**
 * Construct the display string of a key combination based on platform.
 * For example, the display of alt in Windows or Linux would be "Alt";
 * while in Mac would be "⌥".
 * @param keyComb
 * @param mustUsePlus if true will join the characters with "+" for all platforms;
 * otherwise if the platform is Mac, the characters will be next to each other.
 * @returns the constructed string, if keyCode is null and the characters are joint with "+",
 * it will have a dangling "+" as the last character, e.g., "Alt+Ctrl+".
 */
export declare function constructKeyCombinationDisplay(keyComb: KeyCombination, mustUsePlus: boolean): string;
/**
 * Construct the display string for a key combination
 *
 * @param hotKeyDef
 * @param hotKeyRegistry
 * @param mustUsePlus
 * @returns {string} – key combination as string or empty string if not found
 */
export declare function getHotKeyDisplay(hotKeyDef: HotKeyDefinition, hotKeyRegistry: HotKeyRegistry, mustUsePlus: boolean): string;
//# sourceMappingURL=hotkeys.d.ts.map