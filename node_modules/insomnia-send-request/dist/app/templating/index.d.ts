import type { NunjucksParsedTag } from './utils';
export declare class RenderError extends Error {
    message: string;
    path: string | null;
    location: {
        line: number;
        column: number;
    };
    type: string;
    reason: string;
}
export declare const RENDER_ALL = "all";
export declare const RENDER_VARS = "variables";
export declare const RENDER_TAGS = "tags";
export declare const NUNJUCKS_TEMPLATE_GLOBAL_PROPERTY_NAME = "_";
/**
 * Render text based on stuff
 * @param {String} text - Nunjucks template in text form
 * @param {Object} [config] - Config options for rendering
 * @param {Object} [config.context] - Context to render with
 * @param {Object} [config.path] - Path to include in the error message
 * @param {Object} [config.renderMode] - Only render variables (not tags)
 */
export declare function render(text: string, config?: {
    context?: Record<string, any>;
    path?: string;
    renderMode?: string;
}): Promise<string | null>;
/**
 * Reload Nunjucks environments. Useful for if plugins change.
 */
export declare function reload(): void;
/**
 * Get definitions of template tags
 */
export declare function getTagDefinitions(): Promise<NunjucksParsedTag[]>;
//# sourceMappingURL=index.d.ts.map