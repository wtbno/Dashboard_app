/// <reference types="node" />
import React, { PureComponent, ReactNode } from 'react';
declare type States = typeof STATE_DEFAULT | typeof STATE_ASK | typeof STATE_DONE;
declare const STATE_DEFAULT = "default";
declare const STATE_ASK = "ask";
declare const STATE_DONE = "done";
interface Props {
    onClick?: React.MouseEventHandler<HTMLButtonElement> | ((value: any, event: React.MouseEvent<HTMLButtonElement>) => void);
    addIcon?: boolean;
    children?: ReactNode;
    disabled?: boolean;
    confirmMessage?: string;
    doneMessage?: string;
    value?: any;
    tabIndex?: number;
    className?: string;
    title?: string;
}
interface State {
    state: States;
}
export declare class PromptButton extends PureComponent<Props> {
    _doneTimeout: NodeJS.Timeout | null;
    _triggerTimeout: NodeJS.Timeout | null;
    state: State;
    _confirm(...args: any[]): void;
    _ask(...args: any[]): void;
    _handleClick(...args: any[]): void;
    componentWillUnmount(): void;
    render(): JSX.Element;
}
export {};
//# sourceMappingURL=prompt-button.d.ts.map