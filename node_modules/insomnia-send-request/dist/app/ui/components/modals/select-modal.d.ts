import React, { PureComponent } from 'react';
import { Modal } from '../base/modal';
export interface SelectModalShowOptions {
    message: string | null;
    onCancel?: () => void;
    onDone?: (selectedValue: string | null) => void | Promise<void>;
    options: {
        name: string;
        value: string;
    }[];
    title: string | null;
    value: string | null;
    noEscape?: boolean;
}
export declare class SelectModal extends PureComponent<{}, SelectModalShowOptions> {
    modal: React.RefObject<Modal>;
    doneButton: React.RefObject<HTMLButtonElement>;
    state: SelectModalShowOptions;
    _onDone(): Promise<void>;
    _handleSelectChange(event: React.SyntheticEvent<HTMLSelectElement>): void;
    show({ message, onCancel, onDone, options, title, value, noEscape, }?: SelectModalShowOptions): void;
    render(): JSX.Element;
}
export declare const showSelectModal: (opts: SelectModalShowOptions) => any;
//# sourceMappingURL=select-modal.d.ts.map