import { PureComponent } from 'react';
import { Modal } from '../base/modal';
interface State {
    title: string;
    message: string;
    yesText: string;
    noText: string;
    loading: boolean;
}
interface AskModalOptions {
    title?: string;
    message?: string;
    onDone?: (success: boolean) => Promise<void>;
    yesText?: string;
    noText?: string;
}
export declare class AskModal extends PureComponent<{}, State> {
    state: State;
    modal: Modal | null;
    yesButton: HTMLButtonElement | null;
    _doneCallback: AskModalOptions['onDone'];
    _promiseCallback: (value: boolean | PromiseLike<boolean>) => void;
    _setModalRef(m: Modal): void;
    _setYesButtonRef(n: HTMLButtonElement): void;
    _handleYes(): Promise<void>;
    _handleNo(): Promise<void>;
    hide(): void;
    show({ title, message, onDone, yesText, noText }?: AskModalOptions): Promise<boolean>;
    render(): JSX.Element;
}
export {};
//# sourceMappingURL=ask-modal.d.ts.map