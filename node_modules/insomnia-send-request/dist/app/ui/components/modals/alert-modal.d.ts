import { PureComponent, ReactNode } from 'react';
import { Modal } from '../base/modal';
export interface AlertModalOptions {
    title?: string;
    message?: ReactNode;
    addCancel?: boolean;
    okLabel?: string;
    onConfirm?: () => void | Promise<void>;
}
declare type State = Omit<AlertModalOptions, 'onConfirm'>;
export declare class AlertModal extends PureComponent<{}, State> {
    state: State;
    modal: Modal | null;
    _cancel: HTMLButtonElement | null;
    _ok: HTMLButtonElement | null;
    _okCallback: (value: void | PromiseLike<void>) => void;
    _okCallback2: AlertModalOptions['onConfirm'];
    _setModalRef(m: Modal): void;
    _handleOk(): void;
    hide(): void;
    setCancelRef(n: HTMLButtonElement): void;
    setOkRef(n: HTMLButtonElement): void;
    show({ title, message, addCancel, onConfirm, okLabel }: AlertModalOptions): Promise<void>;
    render(): JSX.Element;
}
export {};
//# sourceMappingURL=alert-modal.d.ts.map