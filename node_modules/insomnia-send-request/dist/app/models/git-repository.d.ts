import type { GitCredentials } from '../sync/git/git-vcs';
import type { BaseModel } from './index';
export declare type GitRepository = BaseModel & BaseGitRepository;
export declare const name = "Git Repository";
export declare const type = "GitRepository";
export declare const prefix = "git";
export declare const canDuplicate = false;
export declare const canSync = false;
export declare function init(): BaseGitRepository;
interface BaseGitRepository {
    needsFullClone: boolean;
    uri: string;
    credentials: GitCredentials | null;
    author: {
        name: string;
        email: string;
    };
    uriNeedsMigration: boolean;
}
export declare const isGitRepository: (model: Pick<BaseModel, 'type'>) => model is GitRepository;
export declare function migrate(doc: GitRepository): GitRepository;
export declare function create(patch?: Partial<GitRepository>): Promise<GitRepository>;
export declare function getById(id: string): Promise<GitRepository | null>;
export declare function update(repo: GitRepository, patch: Partial<GitRepository>): Promise<GitRepository>;
export declare function remove(repo: GitRepository): Promise<void>;
export declare function all(): Promise<GitRepository[]>;
export {};
//# sourceMappingURL=git-repository.d.ts.map