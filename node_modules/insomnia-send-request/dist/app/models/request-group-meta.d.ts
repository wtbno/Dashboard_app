import type { BaseModel } from './index';
export declare const name = "Folder Meta";
export declare const type = "RequestGroupMeta";
export declare const prefix = "fldm";
export declare const canDuplicate = false;
export declare const canSync = false;
interface BaseRequestGroupMeta {
    collapsed: boolean;
}
export declare type RequestGroupMeta = BaseModel & BaseRequestGroupMeta;
export declare const isRequestGroupMeta: (model: Pick<BaseModel, 'type'>) => model is RequestGroupMeta;
export declare function init(): {
    parentId: null;
    collapsed: boolean;
};
export declare function migrate(doc: RequestGroupMeta): RequestGroupMeta;
export declare function create(patch?: Partial<RequestGroupMeta>): Promise<RequestGroupMeta>;
export declare function update(requestGroupMeta: RequestGroupMeta, patch: Partial<RequestGroupMeta>): Promise<RequestGroupMeta>;
export declare function getByParentId(parentId: string): Promise<RequestGroupMeta | null>;
export declare function all(): Promise<RequestGroupMeta[]>;
export {};
//# sourceMappingURL=request-group-meta.d.ts.map