import type { BaseModel } from './index';
export declare const name = "Folder";
export declare const type = "RequestGroup";
export declare const prefix = "fld";
export declare const canDuplicate = true;
export declare const canSync = true;
interface BaseRequestGroup {
    name: string;
    description: string;
    environment: Record<string, any>;
    environmentPropertyOrder: Record<string, any> | null;
    metaSortKey: number;
}
export declare type RequestGroup = BaseModel & BaseRequestGroup;
export declare const isRequestGroup: (model: Pick<BaseModel, 'type'>) => model is RequestGroup;
export declare function init(): BaseRequestGroup;
export declare function migrate(doc: RequestGroup): RequestGroup;
export declare function create(patch?: Partial<RequestGroup>): Promise<RequestGroup>;
export declare function update(requestGroup: RequestGroup, patch?: Partial<RequestGroup>): Promise<RequestGroup>;
export declare function getById(id: string): Promise<RequestGroup | null>;
export declare function findByParentId(parentId: string): Promise<RequestGroup[]>;
export declare function remove(requestGroup: RequestGroup): Promise<void>;
export declare function all(): Promise<RequestGroup[]>;
export declare function duplicate(requestGroup: RequestGroup, patch?: Partial<RequestGroup>): Promise<RequestGroup>;
export {};
//# sourceMappingURL=request-group.d.ts.map