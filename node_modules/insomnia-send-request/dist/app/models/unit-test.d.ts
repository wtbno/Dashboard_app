import type { BaseModel } from './index';
export declare const name = "Unit Test";
export declare const type = "UnitTest";
export declare const prefix = "ut";
export declare const canDuplicate = true;
export declare const canSync = true;
interface BaseUnitTest {
    name: string;
    code: string;
    requestId: string | null;
}
export declare type UnitTest = BaseModel & BaseUnitTest;
export declare const isUnitTest: (model: Pick<BaseModel, 'type'>) => model is UnitTest;
export declare function init(): {
    requestId: null;
    name: string;
    code: string;
};
export declare function migrate(doc: UnitTest): UnitTest;
export declare function create(patch?: Partial<UnitTest>): Promise<UnitTest>;
export declare function remove(unitTest: UnitTest): Promise<void>;
export declare function update(unitTest: UnitTest, patch?: Partial<UnitTest>): Promise<UnitTest>;
export declare function getByParentId(parentId: string): Promise<UnitTest | null>;
export declare function all(): Promise<UnitTest[]>;
export {};
//# sourceMappingURL=unit-test.d.ts.map