import type { BaseModel } from './index';
export declare const name = "Unit Test Result";
export declare const type = "UnitTestResult";
export declare const prefix = "utr";
export declare const canDuplicate = false;
export declare const canSync = false;
interface BaseUnitTestResult {
    results: Record<string, any>;
}
export declare type UnitTestResult = BaseModel & BaseUnitTestResult;
export declare const isUnitTestResult: (model: Pick<BaseModel, 'type'>) => model is UnitTestResult;
export declare function init(): {
    results: null;
};
export declare function migrate(doc: UnitTestResult): UnitTestResult;
export declare function create(patch?: Partial<UnitTestResult>): Promise<UnitTestResult>;
export declare function update(unitTest: UnitTestResult, patch: Partial<UnitTestResult>): Promise<UnitTestResult>;
export declare function getByParentId(parentId: string): Promise<BaseModel | null>;
export declare function all(): Promise<UnitTestResult[]>;
export {};
//# sourceMappingURL=unit-test-result.d.ts.map