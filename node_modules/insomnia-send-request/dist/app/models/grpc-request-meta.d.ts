import type { BaseModel } from './index';
export declare const name = "gRPC Request Meta";
export declare const type = "GrpcRequestMeta";
export declare const prefix = "greqm";
export declare const canDuplicate = false;
export declare const canSync = false;
interface BaseGrpcRequestMeta {
    pinned: boolean;
    lastActive: number;
}
export declare type GrpcRequestMeta = BaseModel & BaseGrpcRequestMeta;
export declare const isGrpcRequestMeta: (model: Pick<BaseModel, 'type'>) => model is GrpcRequestMeta;
export declare function init(): {
    pinned: boolean;
    lastActive: number;
};
export declare function migrate(doc: GrpcRequestMeta): GrpcRequestMeta;
export declare function create(patch?: Partial<GrpcRequestMeta>): Promise<GrpcRequestMeta>;
export declare function update(requestMeta: GrpcRequestMeta, patch: Partial<GrpcRequestMeta>): Promise<GrpcRequestMeta>;
export declare function getByParentId(parentId: string): Promise<GrpcRequestMeta | null>;
export declare function getOrCreateByParentId(parentId: string): Promise<GrpcRequestMeta>;
export declare function updateOrCreateByParentId(parentId: string, patch: Partial<GrpcRequestMeta>): Promise<GrpcRequestMeta>;
export declare function all(): Promise<GrpcRequestMeta[]>;
export {};
//# sourceMappingURL=grpc-request-meta.d.ts.map