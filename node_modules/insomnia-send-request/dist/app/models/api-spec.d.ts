import type { BaseModel } from './index';
export declare const name = "ApiSpec";
export declare const type = "ApiSpec";
export declare const prefix = "spc";
export declare const canDuplicate = true;
export declare const canSync = false;
interface BaseApiSpec {
    fileName: string;
    contentType: 'json' | 'yaml';
    contents: string;
}
export declare type ApiSpec = BaseModel & BaseApiSpec;
export declare const isApiSpec: (model: Pick<BaseModel, 'type'>) => model is ApiSpec;
export declare function init(): BaseApiSpec;
export declare function migrate(doc: ApiSpec): Promise<ApiSpec>;
export declare function getByParentId(workspaceId: string): Promise<ApiSpec | null>;
export declare function getOrCreateForParentId(workspaceId: string, patch?: Partial<ApiSpec>): Promise<ApiSpec>;
export declare function updateOrCreateForParentId(workspaceId: string, patch?: Partial<ApiSpec>): Promise<ApiSpec>;
export declare function all(): Promise<ApiSpec[]>;
export declare function update(apiSpec: ApiSpec, patch?: Partial<ApiSpec>): Promise<ApiSpec>;
export declare function removeWhere(parentId: string): Promise<void>;
export {};
//# sourceMappingURL=api-spec.d.ts.map