module.exports=function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=11)}([function(e,t,n){"use strict";var o=this&&this.__createBinding||(Object.create?function(e,t,n,o){void 0===o&&(o=n),Object.defineProperty(e,o,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,o){void 0===o&&(o=n),e[o]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&o(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.configureLogger=t.logger=t.noConsoleLog=void 0;const a=i(n(18)),s=n(7);t.noConsoleLog=async e=>{const t=console.log;console.log=s.noop;try{return await e()}finally{console.log=t}};const l=a.default.create({reporters:[new a.FancyReporter({formatOptions:{date:!1}})]});l.__getLogs=()=>({}),t.logger=l;t.configureLogger=(e=!1,n=!1)=>{t.logger.level=e?a.LogLevel.Verbose:a.LogLevel.Info,n&&t.logger.setReporters([new a.BasicReporter])}},function(e,t){e.exports=require("path")},function(e,t,n){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.loadDb=t.emptyDb=void 0;const r=o(n(1)),i=n(16),a=n(0),s=n(7),l=o(n(20)),c=o(n(21)),u=o(n(22));t.emptyDb=()=>({ApiSpec:[],Environment:[],Request:[],RequestGroup:[],Workspace:[],UnitTest:[],UnitTestSuite:[]});t.loadDb=async({workingDir:e,appDataDir:n,filterTypes:o,src:p}={})=>{let d=null;if(!n&&!p){const t=e||".";d=await l.default(t,o),d&&a.logger.debug(`Data store configured from git repository at \`${r.default.resolve(t)}\``)}if(p&&(d=await c.default(p,o),d&&a.logger.debug(`Data store configured from file at \`${r.default.resolve(p)}\``)),!d){const e=p||n||i.getAppDataDir(s.getDefaultAppName());if(d=await u.default(e,o),d&&a.logger.debug(`Data store configured from app data directory at \`${r.default.resolve(e)}\``),!d&&!n&&!p){const e=i.getAppDataDir("Insomnia Designer");d=await u.default(e),d&&a.logger.debug(`Data store configured from Insomnia Designer app data directory at \`${r.default.resolve(e)}\``)}}return n&&a.logger.warn("The option `--appDataDir` has been deprecated and will be removed in future releases. Please use `--src` as an alternative"),d||(a.logger.warn("No git, app data store or Insomnia V4 export file found, re-run `inso` with `--verbose` to see tracing information"),d=t.emptyDb()),d}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.handleError=t.InsoError=void 0;const o=n(0);class r extends Error{constructor(e,t){super(e),this.name="InsoError",this.cause=t}}t.InsoError=r;t.handleError=e=>{e instanceof r?(o.logger.fatal(e.message),e.cause&&o.logger.error(e.cause)):e&&o.logger.error(e),o.logger.info("To view tracing information, re-run `inso` with `--verbose`")}},function(e,t){e.exports=require("fs")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.promptApiSpec=t.loadApiSpec=void 0;const o=n(9),r=n(0),i=n(6),a="api specification";t.loadApiSpec=(e,t)=>{r.logger.trace("Load %s with identifier `%s` from data store",a,t);const n=e.ApiSpec.filter(e=>i.matchIdIsh(e,t)||e.fileName===t);return r.logger.trace("Found %d.",n.length),i.ensureSingleOrNone(n,a)};t.promptApiSpec=async(e,n)=>{if(n||!e.ApiSpec.length)return null;const s=new o.AutoComplete({name:"apiSpec",message:"Select an API Specification",choices:e.ApiSpec.map(e=>i.getDbChoice(i.generateIdIsh(e),e.fileName))});r.logger.trace("Prompt for %s",a);const[l]=(await s.run()).split(" - ").reverse();return t.loadApiSpec(e,l)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ensureSingle=t.ensureSingleOrNone=t.getDbChoice=t.generateIdIsh=t.matchIdIsh=void 0;const o=n(3);t.matchIdIsh=({_id:e},t)=>e.startsWith(t);function r(e,t,n="  |"){if(!e||e<0)return t;return`${new Array(e+1).join(n)} ${t}`}t.generateIdIsh=({_id:e},t=10)=>e.substr(0,t);t.getDbChoice=(e,t,n={})=>({name:e,message:r(n.indent||0,t),value:`${t} - ${e}`,hint:n.hint||""+e});t.ensureSingleOrNone=(e,t)=>{if(1===e.length)return e[0];if(0===e.length)return null;throw new o.InsoError(`Expected single or no ${t} in the data store, but found multiple (${e.length}).`)};t.ensureSingle=(e,t)=>{if(1===e.length)return e[0];if(0===e.length)throw new o.InsoError(`Expected single ${t} in the data store, but found none.`);throw new o.InsoError(`Expected single ${t} in the data store, but found multiple (${e.length}).`)}},function(e,t,n){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.noop=t.getDefaultAppName=t.exit=t.logErrorExit1=t.getVersion=void 0;const r=o(n(19)),i=n(3);t.getVersion=()=>r.default.version;t.logErrorExit1=e=>{i.handleError(e),process.exit(1)};t.exit=async e=>e.then(e=>process.exit(e?0:1)).catch(t.logErrorExit1);t.getDefaultAppName=()=>"Insomnia";t.noop=()=>{}},function(e,t){e.exports=require("yaml")},function(e,t){e.exports=require("enquirer")},function(e,t,n){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.writeFileWithCliOptions=void 0;const r=o(n(4)),i=o(n(24)),a=o(n(1)),s=n(3);t.writeFileWithCliOptions=async function(e,t,n){const o=a.default.isAbsolute(e)?e:a.default.join(n||".",e);try{return await i.default.sync(a.default.dirname(o)),await r.default.promises.writeFile(o,t),o}catch(e){throw new s.InsoError(`Failed to write to "${o}"`,e)}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.go=void 0;var o=n(12);Object.defineProperty(t,"go",{enumerable:!0,get:function(){return o.go}})},function(e,t,n){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.go=void 0;const r=o(n(13)),i=n(14),a=n(15),s=n(25),l=n(27),c=n(29),u=n(36),p=n(0),d=n(7),f=e=>(p.configureLogger(e.verbose,e.ci),e.printOptions&&p.logger.log("Loaded options",e,"\n"),e);t.go=(e,t)=>{const n=e=>{const n=new r.default.Command(e).storeOptionsAsProperties(!1);return t&&n.exitOverride(),n};p.configureLogger();const o=n();var m;o.version(d.getVersion(),"-v, --version").description("A CLI for Insomnia!"),o.option("-w, --workingDir <dir>","set working directory").option("-a, --appDataDir <dir>","set the app data directory (deprecated; use --src instead)").option("--config <path>","path to configuration file").option("--verbose","show additional logs while running the command").option("--src <file|dir>","set the app data source").option("--printOptions","print the loaded options").option("--ci","run in CI, disables all prompts"),o.addCommand((e=>{const t=e("generate").description("Code generation utilities");return t.command("config [identifier]").description("Generate configuration from an api spec.").option("-t, --type <value>",`type of configuration to generate, options are [${s.conversionOptions.join(", ")}] (default: declarative)`).option("--tags <tags>","comma separated list of tags to apply to each entity").option("-o, --output <path>","save the generated config to a file").action((e,t)=>{let n=u.getOptions(t,{type:"declarative"});return n=f(n),d.exit(s.generateConfig(e,n))}),t})(n)).addCommand((e=>{const t=e("run").description("Execution utilities");return t.command("test [identifier]").description("Run Insomnia unit test suites").option("-e, --env <identifier>","environment to use").option("-t, --testNamePattern <regex>","run tests that match the regex").option("-r, --reporter <reporter>",`reporter to use, options are [${c.reporterTypes.join(", ")}] (default: spec)`).option("-b, --bail",'abort ("bail") after first test failure').option("--keepFile","do not delete the generated test file").option("--disableCertValidation","disable certificate validation for requests with SSL").action((e,t)=>{let n=u.getOptions(t,{reporter:"spec"});return n=f(n),d.exit(c.runInsomniaTests(e,n))}),t})(n)).addCommand((e=>{const t=e("lint").description("Linting utilities");return t.command("spec [identifier]").description("Lint an API Specification").action((e,t)=>{let n=u.getOptions(t);return n=f(n),d.exit(l.lintSpecification(e,n))}),t})(n)).addCommand((e=>{const t=e("export").description("Export data from insomnia models");return t.command("spec [identifier]").description("Export an API Specification to a file").option("-o, --output <path>","save the generated config to a file").action((e,t)=>{let n=u.getOptions(t);return n=f(n),d.exit(a.exportSpecification(e,n))}),t})(n)),(m=o).command("script <name>",{isDefault:!0}).description("Run scripts defined in .insorc").allowUnknownOption().action((e,t)=>{var n,o;let r=u.getOptions(t);r=f(r);const a=t.args.slice(1),s=null===(o=null===(n=r.__configFile)||void 0===n?void 0:n.scripts)||void 0===o?void 0:o[e];if(!s)return p.logger.fatal(`Could not find inso script "${e}" in the config file.`),d.exit(new Promise(e=>e(!1)));if(!s.startsWith("inso"))return p.logger.fatal("Tasks in a script should start with `inso`."),d.exit(new Promise(e=>e(!1)));const l=i.parseArgsStringToArgv(`self ${s} ${a.join(" ")}`);p.logger.debug(">> "+l.slice(1).join(" ")),g(m,l)}),g(o,e||process.argv)};const g=(e,t)=>{e.parseAsync(t).catch(d.logErrorExit1)}},function(e,t){e.exports=require("commander")},function(e,t){e.exports=require("string-argv")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.exportSpecification=void 0;const o=n(2),r=n(5),i=n(0),a=n(10);t.exportSpecification=async function(e,{output:t,workingDir:n,appDataDir:s,ci:l,src:c}){const u=await o.loadDb({workingDir:n,appDataDir:s,filterTypes:["ApiSpec"],src:c}),p=e?r.loadApiSpec(u,e):await r.promptApiSpec(u,!!l);if(!p)return i.logger.fatal("Specification not found."),!1;if(t){const e=await a.writeFileWithCliOptions(t,p.contents,n);i.logger.log(`Specification exported to "${e}".`)}else i.logger.log(p.contents);return!0}},function(e,t,n){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.getAppDataDir=void 0;const r=n(17),i=o(n(1));t.getAppDataDir=function(e){switch(process.platform){case"darwin":return i.default.join(r.homedir(),"Library","Application Support",e);case"win32":return i.default.join(process.env.APPDATA||i.default.join(r.homedir(),"AppData","Roaming"),e);case"linux":return i.default.join(process.env.XDG_DATA_HOME||i.default.join(r.homedir(),".config"),e);default:return""}}},function(e,t){e.exports=require("os")},function(e,t){e.exports=require("consola")},function(e){e.exports=JSON.parse('{"name":"insomnia-inso","version":"2.4.0","homepage":"https://insomnia.rest","description":"A CLI for Insomnia - The Collaborative API Design Tool","author":"Kong <office@konghq.com>","license":"Apache-2.0","repository":{"type":"git","url":"https://github.com/Kong/insomnia.git","directory":"packages/insomnia-inso"},"bugs":{"url":"https://github.com/kong/insomnia/issues"},"main":"dist/index.js","types":"dist/index.d.ts","bin":{"inso":"bin/inso"},"scripts":{"bootstrap":"npm run build","lint":"eslint . --ext .js,.ts,.tsx","lint:fix":"npm run lint -- --fix","clean":"tsc --build tsconfig.build.json --clean","postclean":"rimraf dist && rimraf binaries && rimraf compressed && rimraf artifacts","test":"jest --runInBand","test:watch":"npm run test -- --watch","test:snapshots":"npm run build && npm run test -- -u","prebuild":"npm run clean","build":"webpack --config webpack/webpack.config.development.js","prebuild:production":"npm run clean","build:production":"webpack --config webpack/webpack.config.production.js --display errors-only","start":"npm run build -- --watch","prepare":"npm run build:production","prepackage":"npm run build:production","package":"ts-node src/scripts/pkg.ts","pkg":"pkg .","postpackage":"ts-node src/scripts/verify-pkg.ts","artifacts":"ts-node src/scripts/artifacts.ts"},"devDependencies":{"@babel/core":"^7.9.0","@babel/plugin-proposal-optional-chaining":"^7.9.0","@babel/preset-env":"^7.10.2","@babel/preset-flow":"^7.10.1","@types/babel__core":"^7.1.12","@types/babel__preset-env":"^7.9.1","@types/lodash.flattendeep":"^4.4.6","@types/mkdirp":"^1.0.1","@types/nedb":"^1.8.11","@types/node":"^14.14.32","@types/ramda":"^0.27.44","@types/rimraf":"^3.0.0","@types/webpack-node-externals":"^2.5.0","@types/yaml":"^1.9.7","execa":"^5.0.0","get-bin-path":"^5.1.0","jest":"^26.6.3","node-loader":"1.0.2","pkg":"^5.3.2","rimraf":"^3.0.2","ts-loader":"^8.2.0","ts-node":"^9.1.1","webpack":"4.44.1","webpack-cli":"^3.3.12","webpack-merge":"^5.0.7","webpack-node-externals":"^1.7.2"},"dependencies":{"@stoplight/spectral":"^5.9.0","commander":"^5.1.0","consola":"^2.15.0","cosmiconfig":"^6.0.0","enquirer":"^2.3.6","insomnia-plugin-base64":"2.4.0","insomnia-plugin-cookie-jar":"2.4.0","insomnia-plugin-core-themes":"2.4.0","insomnia-plugin-file":"2.4.0","insomnia-plugin-hash":"2.4.0","insomnia-plugin-jsonpath":"2.4.0","insomnia-plugin-now":"2.4.0","insomnia-plugin-os":"2.4.0","insomnia-plugin-prompt":"2.4.0","insomnia-plugin-request":"2.4.0","insomnia-plugin-response":"2.4.0","insomnia-plugin-uuid":"2.4.0","insomnia-send-request":"2.4.0","insomnia-testing":"2.4.0","lodash.flattendeep":"^4.4.0","mkdirp":"^1.0.4","nedb":"^1.8.0","openapi-2-kong":"2.4.0","ramda":"^0.27.1","ramda-adjunct":"^2.33.0","string-argv":"^0.3.1","yaml":"^1.10.0"},"gitHead":"e02e5d404fbfda077c9e6ffaf9b28a3171d58f1d"}')},function(e,t,n){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=o(n(4)),i=o(n(1)),a=o(n(8)),s=n(2);t.default=async(e,t)=>{if(e=i.default.join(e,".insomnia"),!r.default.existsSync(i.default.join(e,"Workspace")))return null;const n=s.emptyDb(),o=(null==t?void 0:t.length)?t:Object.keys(n);return await Promise.all(o.map(async t=>{const o=i.default.join(e,t);if(!r.default.existsSync(o))return;const s=await r.default.promises.readdir(o);return Promise.all(s.map(o=>(async(e,t)=>{const o=await r.default.promises.readFile(t),i=a.default.parse(o.toString());n[e].push(i)})(t,i.default.join(e,t,o))))})),n}},function(e,t,n){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=o(n(4)),i=o(n(1)),a=o(n(8)),s=n(3),l=n(2),c={api_spec:"ApiSpec",environment:"Environment",request:"Request",request_group:"RequestGroup",workspace:"Workspace",unit_test_suite:"UnitTestSuite",unit_test:"UnitTest"},u=e=>c[e];t.default=async(e,t)=>{if(!(r.default.existsSync(e)&&r.default.lstatSync(e).isFile()))return null;const n=i.default.basename(e),o=l.emptyDb(),c=await r.default.promises.readFile(e,{encoding:"utf-8"});let p;try{p=a.default.parse(c)}catch(e){throw new s.InsoError(`Failed to parse ${n}.`,e)}if(!p)throw new s.InsoError(`Failed to parse ${n}.`);if(!p.__export_format)throw new s.InsoError(`Expected an Insomnia v4 export file; unexpected data found in ${n}.`);if(4!==p.__export_format)throw new s.InsoError(`Expected an Insomnia v4 export file; found an Insomnia v${p.__export_format} export file in ${n}.`);const d=new Set(t);return p.resources.forEach(e=>{var t;if(!d.size||d.has(u(e._type))){const n=(({_type:e,...t})=>({...t,type:u(e)}))(e);null===(t=o[n.type])||void 0===t||t.push(n)}}),o}},function(e,t,n){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=o(n(4)),i=o(n(23)),a=o(n(1)),s=n(2);t.default=async(e,t)=>{if(!r.default.existsSync(a.default.join(e,"insomnia.Workspace.db")))return null;const n=s.emptyDb(),o=((null==t?void 0:t.length)?t:Object.keys(n)).map(t=>new Promise((o,r)=>{const s=a.default.join(e,`insomnia.${t}.db`);new i.default({autoload:!0,filename:s,corruptAlertThreshold:.9}).find({},(e,i)=>{if(e)return r(e);n[t].push(...i),o(null)})}));return await Promise.all(o),n}},function(e,t){e.exports=require("nedb")},function(e,t){e.exports=require("mkdirp")},function(e,t,n){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.generateConfig=t.conversionTypeMap=t.conversionOptions=void 0;const r=n(26),i=o(n(1)),a=o(n(8)),s=n(2),l=n(5),c=n(3),u=n(0),p=n(10);t.conversionOptions=["declarative","kubernetes"],t.conversionTypeMap={kubernetes:"kong-for-kubernetes",declarative:"kong-declarative-config"};t.generateConfig=async(e,n={})=>{if(!((e={})=>{const{type:n}=e;return!(!n||!t.conversionTypeMap[n])||(u.logger.fatal(`Config type "${n}" not unrecognized. Options are [${t.conversionOptions.join(", ")}].`),!1)})(n))return!1;const{type:o,output:d,tags:f,appDataDir:g,workingDir:m,ci:h,src:v}=n,b=await s.loadDb({workingDir:m,appDataDir:g,filterTypes:["ApiSpec"],src:v});let y=null;const _=e?l.loadApiSpec(b,e):await l.promptApiSpec(b,!!h),w=null==f?void 0:f.split(","),S=t.conversionTypeMap[o];try{if(null==_?void 0:_.contents)u.logger.trace("Generating config from database contents"),y=await r.generateFromString(_.contents,S,w);else if(e){const t=i.default.isAbsolute(e)?e:i.default.join(m||".",e);u.logger.trace(`Generating config from file \`${t}\``),y=await r.generate(t,S,w)}}catch(e){throw new c.InsoError("There was an error while generating configuration",e)}if(!(null==y?void 0:y.documents)||!Array.isArray(y.documents))return u.logger.log("Could not find a valid specification to generate configuration."),!1;const D=y.documents.map(e=>a.default.stringify(e)).join("\n---\n").replace(/\n+---\n+/g,"\n---\n");if(d){const e=await p.writeFileWithCliOptions(d,D,m);u.logger.log(`Configuration generated to "${e}".`)}else u.logger.log(D);return!0}},function(e,t){e.exports=require("openapi-2-kong")},function(e,t,n){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.lintSpecification=void 0;const r=n(28),i=o(n(4)),a=o(n(1)),s=n(2),l=n(5),c=n(3),u=n(0);t.lintSpecification=async function(e,{workingDir:t,appDataDir:n,ci:o,src:p}){const d=await s.loadDb({workingDir:t,appDataDir:n,filterTypes:["ApiSpec"],src:p}),f=e?l.loadApiSpec(d,e):await l.promptApiSpec(d,!!o);let g="";try{if(null==f?void 0:f.contents)u.logger.trace("Linting specification from database contents"),g=f.contents;else{if(!e)return u.logger.fatal("Specification not found."),!1;{const n=a.default.isAbsolute(e)?e:a.default.join(t||".",e);u.logger.trace(`Linting specification from file \`${n}\``);try{g=(await i.default.promises.readFile(n)).toString()}catch(e){throw new c.InsoError(`Failed to read "${n}"`,e)}}}}catch(e){return u.logger.fatal(e.message),!1}const m=new r.Spectral;m.registerFormat("oas2",r.isOpenApiv2),m.registerFormat("oas3",r.isOpenApiv3),await m.loadRuleset("spectral:oas");const h=(await m.run(g)).filter(e=>0===e.severity);return h.length?(u.logger.log(h.length+" lint errors found. \n"),h.forEach(e=>u.logger.log(`${e.range.start.line}:${e.range.start.character} - ${e.message}`)),!1):(u.logger.log("No linting errors. Yay!"),!0)}},function(e,t){e.exports=require("@stoplight/spectral")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.runInsomniaTests=t.reporterTypesSet=t.reporterTypes=void 0;const o=n(30),r=n(2),i=n(31),a=n(32),s=n(0);t.reporterTypes=["dot","list","min","progress","spec"],t.reporterTypesSet=new Set(t.reporterTypes);t.runInsomniaTests=async function(e,l){if(!function({reporter:e}){return!(e&&!t.reporterTypesSet.has(e))||(s.logger.fatal(`Reporter "${e}" not unrecognized. Options are [${t.reporterTypes.join(", ")}].`),!1)}(l))return!1;const{reporter:c,bail:u,keepFile:p,appDataDir:d,workingDir:f,env:g,ci:m,testNamePattern:h,disableCertValidation:v,src:b}=l,y=await r.loadDb({workingDir:f,appDataDir:d,filterTypes:[],src:b}),_=e?a.loadTestSuites(y,e):await a.promptTestSuites(y,!!m);if(!_.length)return s.logger.fatal("No test suites found; cannot run tests."),!1;const w=_[0].parentId,S=g?i.loadEnvironment(y,w,g):await i.promptEnvironment(y,!!m,w);if(!S)return s.logger.fatal("No environment identified; cannot run tests without a valid environment."),!1;const D=o.generate(_.map(e=>{return t=e,n=y.UnitTest.filter(t=>t.parentId===e._id),{name:t.name,suites:[],tests:n.map(({name:e,code:t,requestId:n})=>({name:e,code:t,defaultRequestId:n}))};var t,n})),{getSendRequestCallbackMemDb:x}=n(35),O=await x(S._id,y,{validateSSL:!v});return await s.noConsoleLog(()=>o.runTestsCli(D,{reporter:c,bail:u,keepFile:p,sendRequest:O,testFilter:h}))}},function(e,t){e.exports=require("insomnia-testing")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.promptEnvironment=t.loadEnvironment=void 0;const o=n(9),r=n(0),i=n(6),a=(e,t)=>{r.logger.trace("Load base environment for the workspace `%s` from data store",t);const n=e.Environment.filter(e=>e.parentId===t);return r.logger.trace("Found %d.",n.length),i.ensureSingle(n,"base environment")};t.loadEnvironment=(e,t,n)=>{if(!e.Environment.length)return null;const o=a(e,t),s=e.Environment.filter(e=>e.parentId===o._id);if(!n)return r.logger.trace("No sub environments found, using base environment"),o;r.logger.trace("Load sub environment with identifier `%s` from data store",n);const l=s.filter(e=>i.matchIdIsh(e,n)||e.name===n);return r.logger.trace("Found %d",l.length),i.ensureSingle(l,"sub environment")};t.promptEnvironment=async(e,n,s)=>{if(n||!e.Environment.length)return null;const l=a(e,s),c=e.Environment.filter(e=>e.parentId===l._id);if(!c.length)return r.logger.trace("No sub environments found, using base environment"),l;const u=new o.AutoComplete({name:"environment",message:"Select an environment",choices:c.map(e=>i.getDbChoice(i.generateIdIsh(e,14),e.name))});r.logger.trace("Prompt for environment");const[p]=(await u.run()).split(" - ").reverse();return t.loadEnvironment(e,s,p)}},function(e,t,n){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.promptTestSuites=t.loadTestSuites=t.loadUnitTestSuite=void 0;const r=n(9),i=o(n(33)),a=n(0),s=n(5),l=n(6),c=n(34);t.loadUnitTestSuite=(e,t)=>{a.logger.trace("Load unit test suite with identifier `%s` from data store",t);const n=e.UnitTestSuite.filter(e=>l.matchIdIsh(e,t)||e.name===t);return a.logger.trace("Found %d.",n.length),l.ensureSingleOrNone(n,"unit test suite")};t.loadTestSuites=(e,n)=>{const o=s.loadApiSpec(e,n),r=c.loadWorkspace(e,(null==o?void 0:o.parentId)||n);if(r)return e.UnitTestSuite.filter(e=>e.parentId===r._id);const i=t.loadUnitTestSuite(e,n);return i?[i]:[]};t.promptTestSuites=async(e,n)=>{if(n)return[];const o=e.ApiSpec.map(t=>[l.getDbChoice(l.generateIdIsh(t),t.fileName),...e.UnitTestSuite.filter(e=>e.parentId===t.parentId).map(e=>l.getDbChoice(l.generateIdIsh(e),e.name,{indent:1}))]);if(!o.length)return[];const s=new r.AutoComplete({name:"testSuite",message:"Select a document or unit test suite",choices:i.default(o)});a.logger.trace("Prompt for document or test suite");const[c]=(await s.run()).split(" - ").reverse();return t.loadTestSuites(e,c)}},function(e,t){e.exports=require("lodash.flattendeep")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.loadWorkspace=void 0;const o=n(0),r=n(6);t.loadWorkspace=(e,t)=>{o.logger.trace("Load workspace with identifier `%s` from data store",t);const n=e.Workspace.filter(e=>r.matchIdIsh(e,t)||e.name===t);return o.logger.trace("Found %d.",n.length),r.ensureSingleOrNone(n,"workspace")}},function(e,t){e.exports=require("insomnia-send-request")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getOptions=t.extractCommandOptions=t.loadCosmiConfig=void 0;const o=n(37),r=["appDataDir","workingDir","ci","verbose","src","printOptions"];t.loadCosmiConfig=e=>{var t;try{const n=o.cosmiconfigSync("inso"),i=e?n.load(e):n.search();if(i&&!(null==i?void 0:i.isEmpty)){const e={};return r.forEach(t=>{var n,o;const r=null===(o=null===(n=i.config)||void 0===n?void 0:n.options)||void 0===o?void 0:o[t];r&&(e[t]=r)}),{__configFile:{options:e,scripts:(null===(t=i.config)||void 0===t?void 0:t.scripts)||{},filePath:i.filepath}}}}catch(t){e&&(console.log(`Could not find config file at ${e}.`),console.error(t))}return{}};t.extractCommandOptions=e=>{let t={},n=e;do{t={...n.opts(),...t},n=n.parent}while(n);return t};t.getOptions=(e,n={})=>{const o=t.extractCommandOptions(e),{__configFile:r}=t.loadCosmiConfig(o.config);return r?{...n,...r.options||{},...o,__configFile:r}:{...n,...o}}},function(e,t){e.exports=require("cosmiconfig")}]);