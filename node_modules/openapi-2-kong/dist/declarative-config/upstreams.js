"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateUpstreams = void 0;
const common_1 = require("../common");
const kong_1 = require("../types/kong");
function generateUpstreams(api, tags) {
    const servers = api.servers || [];
    if (servers.length === 0) {
        return [];
    }
    // x-kong-upstream-defaults is free format so we do not want type checking.
    // If added, it would tightly couple these objects to Kong, and that would make future maintenance a lot harder.
    const upstreamDefaults = api[kong_1.xKongUpstreamDefaults] || {};
    if (typeof upstreamDefaults !== 'object') {
        throw new Error(`expected '${kong_1.xKongUpstreamDefaults}' to be an object`);
    }
    const upstream = {
        ...upstreamDefaults,
        name: `${common_1.getName(api)}.upstream`,
        targets: [],
        tags,
    };
    for (const server of servers) {
        const serverWithVars = common_1.fillServerVariables(server);
        const hostWithPort = common_1.parseUrl(serverWithVars).host;
        if (hostWithPort) {
            upstream.targets.push({
                target: hostWithPort,
                tags,
            });
        }
    }
    return [upstream];
}
exports.generateUpstreams = generateUpstreams;
//# sourceMappingURL=upstreams.js.map