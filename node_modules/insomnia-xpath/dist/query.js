"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.query = void 0;
const xmldom_1 = require("xmldom");
const xpath_1 = __importDefault(require("xpath"));
/**
 * Query an XML blob with XPath
 */
const query = (xml, query) => {
    const dom = new xmldom_1.DOMParser().parseFromString(xml);
    let selectedValues = [];
    if (query === undefined) {
        throw new Error('Must pass an XPath query.');
    }
    try {
        selectedValues = xpath_1.default.select(query, dom);
    }
    catch (err) {
        throw new Error(`Invalid XPath query: ${query}`);
    }
    const output = [];
    // Functions return plain strings
    if (typeof selectedValues === 'string') {
        output.push({
            outer: selectedValues,
            inner: selectedValues,
        });
    }
    else {
        for (const selectedValue of selectedValues || []) {
            switch (selectedValue.constructor.name) {
                case 'Attr':
                    output.push({
                        outer: selectedValue.toString().trim(),
                        inner: selectedValue.nodeValue,
                    });
                    break;
                case 'Element':
                    output.push({
                        outer: selectedValue.toString().trim(),
                        inner: selectedValue.childNodes.toString(),
                    });
                    break;
                case 'Text':
                    output.push({
                        outer: selectedValue.toString().trim(),
                        inner: selectedValue.toString().trim(),
                    });
                    break;
                default:
                    break;
            }
        }
    }
    return output;
};
exports.query = query;
//# sourceMappingURL=query.js.map